import{_ as s,c as e,b as n,o as t}from"./app-NfUG-4si.js";const i={};function l(p,a){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="ununtu-env-setting" tabindex="-1"><a class="header-anchor" href="#ununtu-env-setting"><span>ununtu env setting</span></a></h1><h2 id="prepare-geth-go-ethereum" tabindex="-1"><a class="header-anchor" href="#prepare-geth-go-ethereum"><span>prepare - Geth (Go Ethereum)</span></a></h2><h3 id="system-update" tabindex="-1"><a class="header-anchor" href="#system-update"><span>System Update</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Update System</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt</span> upgrade <span class="token parameter variable">-y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="install-geth-go-ethereum" tabindex="-1"><a class="header-anchor" href="#install-geth-go-ethereum"><span>Install Geth (Go Ethereum)</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Install Dependencies</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> software-properties-common</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Add the Ethereum repository</span></span>
<span class="line"><span class="token function">sudo</span> add-apt-repository <span class="token parameter variable">-y</span> ppa:ethereum/ethereum</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Install Geth</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> geth <span class="token parameter variable">-y</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Verify the installation</span></span>
<span class="line">geth version</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-up-and-sync-the-node" tabindex="-1"><a class="header-anchor" href="#set-up-and-sync-the-node"><span>Set Up and Sync the Node</span></a></h3><h4 id="_1-initialize-geth-for-sepolia-create-a-directory-for-sepolia-data-and-initialize" tabindex="-1"><a class="header-anchor" href="#_1-initialize-geth-for-sepolia-create-a-directory-for-sepolia-data-and-initialize"><span>1. Initialize Geth for Sepolia: Create a directory for Sepolia data and initialize</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> ~/sepolia-data</span>
<span class="line">geth <span class="token parameter variable">--datadir</span> ~/sepolia-data init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-start-the-node-on-sepolia-use-the-following-command-to-start-syncing-with-the-sepolia-network" tabindex="-1"><a class="header-anchor" href="#_2-start-the-node-on-sepolia-use-the-following-command-to-start-syncing-with-the-sepolia-network"><span>2. Start the Node on Sepolia: Use the following command to start syncing with the Sepolia network:</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">geth <span class="token parameter variable">--sepolia</span> <span class="token parameter variable">--datadir</span> ~/sepolia-data <span class="token parameter variable">--http</span> <span class="token parameter variable">--http.api</span> eth,net,web3 <span class="token parameter variable">--http.addr</span> <span class="token number">0.0</span>.0.0 <span class="token parameter variable">--http.port</span> <span class="token number">8545</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># no fast</span></span>
<span class="line">geth <span class="token parameter variable">--sepolia</span> <span class="token parameter variable">--datadir</span> ~/sepolia-data <span class="token parameter variable">--http</span> <span class="token parameter variable">--http.api</span> eth,net,web3 <span class="token parameter variable">--syncmode</span> <span class="token string">&quot;snap&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--http</code> enables JSON-RPC over HTTP.</li><li><code>--http.api</code> specifies the enabled APIs (eth, net, and web3 are common for smart contract interactions).</li><li><code>--datadir</code> specifies the data directory.</li><li>Sepolia sync should complete quickly as it is a lightweight test network.</li></ul><h4 id="_3-monitor-the-synchronization-status-open-another-terminal-and-attach-to-the-node" tabindex="-1"><a class="header-anchor" href="#_3-monitor-the-synchronization-status-open-another-terminal-and-attach-to-the-node"><span>3. Monitor the synchronization status: Open another terminal and attach to the node:</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">geth attach ~/sepolia-data/geth.ipc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check synchronization status:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">eth<span class="token punctuation">.</span>syncing<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">net<span class="token punctuation">.</span>peerCount<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>This sync is only for old blockchain, not work for new ones.</p></blockquote><p>Once synchronization completes, <code>eth.syncing</code> will return false.</p><h3 id="secure-your-node" tabindex="-1"><a class="header-anchor" href="#secure-your-node"><span>Secure Your Node</span></a></h3><ol><li>Firewall Configuration:</li></ol><p>Open ports for P2 P communication and JSON-RPC (if needed):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> ufw allow <span class="token number">30303</span>/tcp</span>
<span class="line"><span class="token function">sudo</span> ufw allow <span class="token number">30303</span>/udp</span>
<span class="line"><span class="token function">sudo</span> ufw allow <span class="token number">8545</span>/tcp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>must allow the port first, otherwise, can&#39;t find peer.</p></blockquote><p>HTTP-RPC (Port 8545):</p><p>By default, the HTTP-RPC server is bound to 127.0.0.1, making it accessible only locally. If you need remote access, ensure you understand the security implications and consider implementing additional security measures.</p><ol start="2"><li>Disable Public Access to JSON-RPC: By default, bind --http.addr to 127.0.0.1 if remote access is not required:</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">geth <span class="token parameter variable">--sepolia</span> <span class="token parameter variable">--datadir</span> ~/sepolia-data <span class="token parameter variable">--http</span> <span class="token parameter variable">--http.addr</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">--http.api</span> eth,net,web3</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="interact-with-node" tabindex="-1"><a class="header-anchor" href="#interact-with-node"><span>Interact with Node</span></a></h3><ol><li>Access the Node: <ul><li>Use the IPC file to interact locally:</li><li><code>geth attach ~/sepolia-data/geth.ipc</code></li></ul></li><li>Query Example: Check the current block number: <ul><li><code>eth.blockNumber</code></li></ul></li><li>Deploy Smart Contracts: Use tools like web3.js or frameworks like Truffle/Hardhat to deploy and test contracts.</li></ol><h2 id="prysm" tabindex="-1"><a class="header-anchor" href="#prysm"><span>prysm</span></a></h2><h3 id="download" tabindex="-1"><a class="header-anchor" href="#download"><span>Download</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh <span class="token parameter variable">--output</span> prysm.sh</span>
<span class="line"><span class="token function">chmod</span> +x prysm.sh</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">./prysm.sh beacon-chain <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="run-the-prysm-beacon-node" tabindex="-1"><a class="header-anchor" href="#run-the-prysm-beacon-node"><span>Run the Prysm Beacon Node</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./prysm.sh beacon-chain <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Common Flags for the Beacon Node:</p><ul><li><code>--network=sepolia</code>: Specifies the Sepolia testnet.</li><li><code>--datadir=/path/to/data</code>: (Optional) Specify the data directory for storing blockchain data.</li><li><code>--grpc-gateway-port=3500</code>: (Optional) Change the default gRPC gateway port.</li><li><code>--log-level=info</code>: Adjust log verbosity levels (debug, info, warn, etc.).</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Example with additional options</span></span>
<span class="line">./prysm.sh beacon-chain <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia <span class="token parameter variable">--datadir</span><span class="token operator">=</span>/home/user/prysm-data --log-level<span class="token operator">=</span>info</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="monitor-logs" tabindex="-1"><a class="header-anchor" href="#monitor-logs"><span>Monitor Logs</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line">INFO Syncing chain head<span class="token punctuation">,</span> <span class="token key atrule">current slot</span><span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token key atrule">highest known slot</span><span class="token punctuation">:</span> <span class="token number">4567</span></span>
<span class="line"><span class="token key atrule">INFO Connected to peers</span><span class="token punctuation">:</span> <span class="token number">10</span></span>
<span class="line">INFO Slot processing completed successfully</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-up-a-validator-optional" tabindex="-1"><a class="header-anchor" href="#set-up-a-validator-optional"><span>Set Up a Validator (Optional)</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"></span>
<span class="line"><span class="token comment"># Create Validator Keys: Use Prysm’s validator tool to generate your keys:</span></span>
<span class="line">./prysm.sh validator accounts create <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Run the Validator Client: Start the validator and link it to your beacon node:</span></span>
<span class="line">./prysm.sh validator <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="run-prysm-as-a-background-service" tabindex="-1"><a class="header-anchor" href="#run-prysm-as-a-background-service"><span>Run Prysm as a Background Service</span></a></h3><p>To ensure Prysm runs persistently in the background, you can use nohup or systemd.</p><h4 id="option-1-using-nohup" tabindex="-1"><a class="header-anchor" href="#option-1-using-nohup"><span>Option 1: Using nohup</span></a></h4><p>Run Prysm in the background and save logs:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"></span>
<span class="line"><span class="token function">nohup</span> ./prysm.sh beacon-chain <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia <span class="token operator">&gt;</span> beacon.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>To monitor logs:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tail</span> <span class="token parameter variable">-f</span> beacon.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="option-2-using-systemd" tabindex="-1"><a class="header-anchor" href="#option-2-using-systemd"><span>Option 2: Using systemd</span></a></h4><p>Create a service file for Prysm:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">nano</span> /etc/systemd/system/prysm-beacon.service</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Add the following:</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">Prysm Beacon Node</span></span>
<span class="line"><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network.target</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">simple</span></span>
<span class="line"><span class="token key attr-name">User</span><span class="token punctuation">=</span><span class="token value attr-value">$USER</span></span>
<span class="line"><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/path/to/prysm.sh beacon-chain --network=sepolia --datadir=/path/to/data</span></span>
<span class="line"><span class="token key attr-name">Restart</span><span class="token punctuation">=</span><span class="token value attr-value">always</span></span>
<span class="line"></span>
<span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span></span>
<span class="line">Enable and start the service:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> prysm-beacon</span>
<span class="line"><span class="token function">sudo</span> systemctl start prysm-beacon</span>
<span class="line"><span class="token function">sudo</span> systemctl status prysm-beacon</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="verify-setup" tabindex="-1"><a class="header-anchor" href="#verify-setup"><span>Verify Setup</span></a></h3><p>Check Beacon Node Sync Status: Monitor logs or run the following command if the gRPC interface is enabled:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> http://127.0.0.1:3500/eth/v1alpha1/node/syncing</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check Peers: Ensure the beacon node has connected peers:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> http://127.0.0.1:3500/eth/v1alpha1/node/peers</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Confirm Validator Status (if applicable): Use the Prysm validator dashboard to monitor the validator’s status.</p><blockquote><p>Troubleshooting</p><ol><li><strong>No peers</strong>: Check if your ports (default: 13000 TCP/UDP) are open and not blocked by a firewall:</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> ufw allow <span class="token number">13000</span>/tcp</span>
<span class="line"><span class="token function">sudo</span> ufw allow <span class="token number">13000</span>/udp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Data directory issues</strong>: Ensure the <code>--datadir</code> path exists and has proper write permissions.</p><p><strong>Logs not verbose enough</strong>: Use <code>--log-level=debug</code> for more detailed logs:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./prysm.sh beacon-chain <span class="token parameter variable">--network</span><span class="token operator">=</span>sepolia --log-level<span class="token operator">=</span>debug</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote>`,61)]))}const o=s(i,[["render",l],["__file","env.html.vue"]]),c=JSON.parse('{"path":"/BlockChain/env.html","title":"ununtu env setting","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"prepare - Geth (Go Ethereum)","slug":"prepare-geth-go-ethereum","link":"#prepare-geth-go-ethereum","children":[{"level":3,"title":"System Update","slug":"system-update","link":"#system-update","children":[]},{"level":3,"title":"Install Geth (Go Ethereum)","slug":"install-geth-go-ethereum","link":"#install-geth-go-ethereum","children":[]},{"level":3,"title":"Set Up and Sync the Node","slug":"set-up-and-sync-the-node","link":"#set-up-and-sync-the-node","children":[]},{"level":3,"title":"Secure Your Node","slug":"secure-your-node","link":"#secure-your-node","children":[]},{"level":3,"title":"Interact with Node","slug":"interact-with-node","link":"#interact-with-node","children":[]}]},{"level":2,"title":"prysm","slug":"prysm","link":"#prysm","children":[{"level":3,"title":"Download","slug":"download","link":"#download","children":[]},{"level":3,"title":"Run the Prysm Beacon Node","slug":"run-the-prysm-beacon-node","link":"#run-the-prysm-beacon-node","children":[]},{"level":3,"title":"Monitor Logs","slug":"monitor-logs","link":"#monitor-logs","children":[]},{"level":3,"title":"Set Up a Validator (Optional)","slug":"set-up-a-validator-optional","link":"#set-up-a-validator-optional","children":[]},{"level":3,"title":"Run Prysm as a Background Service","slug":"run-prysm-as-a-background-service","link":"#run-prysm-as-a-background-service","children":[]},{"level":3,"title":"Verify Setup","slug":"verify-setup","link":"#verify-setup","children":[]}]}],"git":{"updatedTime":1732662321000},"filePathRelative":"BlockChain/env.md"}');export{o as comp,c as data};
